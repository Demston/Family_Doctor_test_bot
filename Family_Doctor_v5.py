""" Family_Doctor_test_bot.
–¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —É—Å–ª–æ–≤–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∫–ª–∏–Ω–∏–∫–∏. –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–µ—Å—Ç–∏ –∑–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –¢–µ–ª–µ–≥—Ä–∞–º, —É–¥–æ–±–µ–Ω –∏ –ø—Ä–æ—Å—Ç.
–í –ø–∞–ø–∫–µ —Å —Ñ–∞–π–ª–æ–º –±–æ—Ç–∞ –ª–µ–∂–∞—Ç —Ñ–∞–π–ª—ã *.xlsx, —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–æ–µ, –≤ —Ñ–∞–π–ª–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω –æ–±—â–∏–π –¥–æ—Å—Ç—É–ø.
–ò–º—è —Ñ–∞–π–ª–∞ - –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –¥–æ–∫—Ç–æ—Ä–∞, –∏–º—è –ª–∏—Å—Ç–∞ - –¥–∞—Ç–∞ (—á—á.–º–º.–≥–≥–≥–≥), –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ –º–µ—Ä–µ –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.
–§–∞–π–ª—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é (–¥–æ–±–∞–≤–ª—è—Ç—å/—É–¥–∞–ª—è—Ç—å –ª–∏—Å—Ç—ã —Å –Ω–æ–≤—ã–º–∏/—Å—Ç–∞—Ä—ã–º–∏ –¥–∞—Ç–∞–º–∏).
–ï—Å–ª–∏ –≤ —à—Ç–∞—Ç–µ –ø–æ—è–≤–∏–ª—Å—è –¥–æ–∫—Ç–æ—Ä —Å –Ω–æ–≤–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–µ–π - –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª, –¥–æ–∫—Ç–æ—Ä –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è –≤ –±–æ—Ç–µ.
–ò–º–µ–Ω–∞ –≤—Å–µ—Ö –∏–Ω–ª–∞–π–Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ –±–æ—Ç–∞ –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—Ç—Å—è –∏–∑ —Ñ–∞–π–ª–∞."""

import openpyxl
import telebot
from telebot import types
import os

TOKEN = '6937469925:AAEnHeyx5EnupxzicTUl1EoJ4SGXb9PYZ5Y'
bot = telebot.TeleBot(TOKEN)

user_data = {'formal_dict': {}}
# —Å–ª–æ–≤–∞—Ä—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞, –∫–ª—é—á - id –µ–≥–æ —á–∞—Ç–∞


@bot.message_handler(commands=['start'])
def welcome(message):
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –¥–æ–∫—Ç–æ—Ä—É üóìÔ∏è')
    button2 = types.KeyboardButton('–û –Ω–∞—Å üè•')
    markup.add(button1, button2)
    bot.send_message(message.chat.id, '{0.first_name}, –∫–ª–∏–Ω–∏–∫–∞ "–§—ç–º–∏–ª–∏ –î–æ–∫—Ç–æ—Ä" —Ä–∞–¥–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å !'
                     .format(message.from_user, bot.get_me()), parse_mode='html',
                     reply_markup=markup)


@bot.message_handler(content_types=['text'])
def dialog(message):
    """–†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
    global user_data
    if message.chat.type == 'private':
        if message.text == '–û –Ω–∞—Å üè•':
            bot.send_message(message.chat.id, '–û–û–û "–§—ç–º–∏–ª–∏ –î–æ–∫—Ç–æ—Ä", –ò–ù–ù 3567778888, '
                                              '–Æ—Ä. –∞–¥—Ä–µ—Å –≥. –ú–æ—Å–∫–≤–∞, –º. –ü—É—à–∫–∏–Ω–∞, —É–ª. –ö–æ–ª–æ—Ç—É—à–∫–∏–Ω–∞, –¥. 228')
        elif message.text == '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –¥–æ–∫—Ç–æ—Ä—É üóìÔ∏è':
            markup = types.InlineKeyboardMarkup()
            # –µ—Å—Ç—å –ø–∞–ø–∫–∞, –≤ –ø–∞–ø–∫–µ - —Ñ–∞–π–ª—ã, –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤ - –¥–æ–∫—Ç–æ—Ä–∞, –æ–Ω–∏ –ø–æ–¥—Ç—è–Ω—É—Ç—Å—è –≤ –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
            files_names = [each.split('.xls')[0]
                           for each in os.listdir() if each.endswith('.xlsx')]
            # —Ü–∏–∫–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Å –≤—ã–±–æ—Ä–æ–º –¥–æ–∫—Ç–æ—Ä–∞
            for i in files_names:
                markup.add((types.InlineKeyboardButton(str(i), callback_data=str(i))))
            bot.send_message(message.chat.id, '–ö –∫–∞–∫–æ–º—É –¥–æ–∫—Ç–æ—Ä—É –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?', reply_markup=markup)
        # —ç—Ç–∞ —á–∞—Å—Ç—å —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç —É–∂–µ –∑–∞–ø–æ–ª–Ω–∏–ª –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: –¥–æ–∫—Ç–æ—Ä, –¥–∞—Ç–∞, –≤—Ä–µ–º—è (—Ñ—É–Ω–∫—Ü–∏—è callback_doctor)
        elif user_data[message.chat.id]['time'] is not None:
            if ',' in message.text:
                # –¥–µ–ª–∏–º –§–ò–û –∏ –Ω–æ–º–µ—Ä –ø–æ –∑–∞–ø—è—Ç–æ–π
                client_name = message.text.split(',')[0]
                client_number = message.text.split(',')[-1]
                # –∑–∞–¥–∞—ë–º –∏–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
                file = user_data[message.chat.id]['file']
                doctor = user_data[message.chat.id]['doctor']
                page = user_data[message.chat.id]['page']
                t = user_data[message.chat.id]['time']
                # –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ, —Å–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –∏ –≤–Ω–æ—Å–∏–º –∑–∞–ø–∏—Å—å
                column_a = page['A'][1:]
                column_b = page['B'][1:]
                for i in range(len(column_a)):
                    if str(column_a[i].value)[:-3] == t:
                        if column_b[i].value is None:
                            page['B' + str(column_b[i].row)] = client_name
                            page['C' + str(column_b[i].row)] = client_number
                            break
                        else:
                            bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –≤–µ—Ä–æ—è—Ç–Ω–æ, –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ. '
                                                              '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
                            break
                file.save(doctor + '.xlsx')
                bot.send_message(message.chat.id, f'–ñ–¥—ë–º –í–∞—Å {page.title} –≤ {t} !')
                del user_data[message.chat.id]
                # –æ—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä–∏–∫ –æ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–ª–∏–µ–Ω—Ç—É
            else:
                bot.send_message(message.chat.id,
                                 '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è (–§–ò–û) –∏, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é - –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏')


@bot.callback_query_handler(func=lambda call: True)
def callback_doctor(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–∞ —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏"""
    global user_data
    if call.message:
        # –∫–ª–∏–µ–Ω—Ç –≤—ã–±—Ä–∞–ª –¥–æ–∫—Ç–æ—Ä–∞, –ø–µ—Ä–µ–¥–∞–≤ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é
        files_names = [each.split('.xls')[0]
                       for each in os.listdir() if each.endswith('.xlsx')]
        if call.data in files_names:
            # —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–æ–º, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª–∏—Å—Ç–æ–≤ –∏ –∏—Ö –∏–º—ë–Ω
            user_data[call.message.chat.id] = {}
            user_data[call.message.chat.id]['doctor'] = call.data
            doctor = user_data[call.message.chat.id]['doctor']
            file = openpyxl.load_workbook(str(doctor) + '.xlsx')
            user_data[call.message.chat.id]['file'] = file
            dates = file.sheetnames
            markup = types.InlineKeyboardMarkup()
            # —Ü–∏–∫–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Å –≤—ã–±–æ—Ä–æ–º –¥–∞—Ç—ã (–¥–∞—Ç–∞ - —ç—Ç–æ –∏–º—è –ª–∏—Å—Ç–∞ –≤ —Ç–∞–±–ª–∏—á–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ)
            for i in dates:
                markup.add(types.InlineKeyboardButton(str(i), callback_data=str(i)))
            bot.send_message(call.message.chat.id, f'–ù–∞ –∫–∞–∫—É—é –¥–∞—Ç—É –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤–∏–∑–∏—Ç –∫ {doctor}—É?',
                             reply_markup=markup)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–î–æ–∫—Ç–æ—Ä:   ' + doctor, reply_markup=None)
        elif call.data in user_data[call.message.chat.id]['file'].sheetnames:
            # –¥–æ–∫—Ç–æ—Ä (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, —Ñ–∞–π–ª) –≤—ã–±—Ä–∞–Ω, –ª–∏—Å—Ç (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –¥–µ–Ω—å) –≤—ã–±—Ä–∞–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–∞–±–ª–∏—Ü–µ–π
            page = user_data[call.message.chat.id]['file'][call.data]
            user_data[call.message.chat.id]['page'] = page
            markup = types.InlineKeyboardMarkup()
            column_a = page['A'][1:]
            column_b = page['B'][1:]
            time_list = []
            for i in range(len(column_a)):
                # —Ü–∏–∫–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Å –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏, –∞ —Ç–∞–∫–∂–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è
                if column_b[i].value is None:
                    t = str(column_a[i].value)[:-3]
                    time_list.append(t)
                else:
                    continue
                markup.add(types.InlineKeyboardButton(str(t), callback_data=str(t)))
            user_data[call.message.chat.id]['time_list'] = time_list
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–î–∞—Ç–∞:   ' + call.data, reply_markup=None)
            bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è:',
                             reply_markup=markup)
        elif call.data in user_data[call.message.chat.id]['time_list']:
            # –¥–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ, –∫–ª–∏–µ–Ω—Ç –≤–≤–µ–¥–µ—Ç –§–ò–û, –Ω–æ–º–µ—Ä, –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è callback_doctor
            user_data[call.message.chat.id]['time'] = call.data
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–í—Ä–µ–º—è:   ' + call.data, reply_markup=None)
            bot.send_message(call.message.chat.id, text='–ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ, –Ω–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –§–ò–û –∏ '
                                                        '–∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–ø—Ä–∏–º–µ—Ä: '
                                                        '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á, +7**********). –ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ '
                                                        '—Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É" —Å–Ω–æ–≤–∞')


if __name__ == '__main__':
    bot.polling(none_stop=True)
